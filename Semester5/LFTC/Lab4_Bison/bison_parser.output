Terminals unused in grammar

   OTHER


Grammar

    0 $accept: prog $end

    1 prog: /* empty */
    2     | header lista_decl lista_isntr final

    3 header: INCLUDE IOSTREAM NAMESPACE SEMICOLON INTDECL MAIN LEFT_PAR RIGHT_PAR LEFT_BR

    4 lista_decl: /* empty */
    5           | decl SEMICOLON lista_decl

    6 decl: tip variabila

    7 tip: INTDECL
    8    | FLOATDECL

    9 variabila: ID
   10          | IDVECTOR

   11 lista_isntr: /* empty */
   12            | instr SEMICOLON lista_isntr

   13 instr: /* empty */
   14      | attr
   15      | inout
   16      | if_exp
   17      | while_exp

   18 attr: ID EQUALS exp

   19 exp: /* empty */
   20    | const
   21    | variabila
   22    | exp PLUS variabila
   23    | exp MINUS variabila
   24    | exp DIV variabila
   25    | exp MOD variabila
   26    | exp MUL variabila

   27 const: INTEGER
   28      | FLOAT

   29 inout: INOP variabila
   30      | OUTOP exp

   31 if_exp: IFSTMT LEFT_PAR condition RIGHT_PAR LEFT_BR lista_isntr RIGHT_BR

   32 while_exp: WHILESTMT LEFT_PAR condition RIGHT_PAR LEFT_BR lista_isntr RIGHT_BR

   33 condition: exp RELATION exp

   34 final: RETURN INTEGER SEMICOLON RIGHT_BR


Terminals, with rules where they appear

$end (0) 0
error (256)
RETURN (258) 34
INCLUDE (259) 3
IOSTREAM (260) 3
NAMESPACE (261) 3
MAIN (262) 3
LEFT_PAR (263) 3 31 32
RIGHT_PAR (264) 3 31 32
LEFT_BR (265) 3 31 32
RIGHT_BR (266) 31 32 34
PLUS (267) 22
MINUS (268) 23
DIV (269) 24
MUL (270) 26
MOD (271) 25
INOP (272) 29
OUTOP (273) 30
IFSTMT (274) 31
WHILESTMT (275) 32
INTDECL (276) 3 7
FLOATDECL (277) 8
EQUALS (278) 18
INTEGER (279) 27 34
FLOAT (280) 28
OTHER (281)
SEMICOLON (282) 3 5 12 34
ID (283) 9 18
IDVECTOR (284) 10
RELATION (285) 33


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
prog (32)
    on left: 1 2, on right: 0
header (33)
    on left: 3, on right: 2
lista_decl (34)
    on left: 4 5, on right: 2 5
decl (35)
    on left: 6, on right: 5
tip (36)
    on left: 7 8, on right: 6
variabila (37)
    on left: 9 10, on right: 6 21 22 23 24 25 26 29
lista_isntr (38)
    on left: 11 12, on right: 2 12 31 32
instr (39)
    on left: 13 14 15 16 17, on right: 12
attr (40)
    on left: 18, on right: 14
exp (41)
    on left: 19 20 21 22 23 24 25 26, on right: 18 22 23 24 25 26 30
    33
const (42)
    on left: 27 28, on right: 20
inout (43)
    on left: 29 30, on right: 15
if_exp (44)
    on left: 31, on right: 16
while_exp (45)
    on left: 32, on right: 17
condition (46)
    on left: 33, on right: 31 32
final (47)
    on left: 34, on right: 2


state 0

    0 $accept: . prog $end

    INCLUDE  shift, and go to state 1

    $default  reduce using rule 1 (prog)

    prog    go to state 2
    header  go to state 3


state 1

    3 header: INCLUDE . IOSTREAM NAMESPACE SEMICOLON INTDECL MAIN LEFT_PAR RIGHT_PAR LEFT_BR

    IOSTREAM  shift, and go to state 4


state 2

    0 $accept: prog . $end

    $end  shift, and go to state 5


state 3

    2 prog: header . lista_decl lista_isntr final

    INTDECL    shift, and go to state 6
    FLOATDECL  shift, and go to state 7

    $default  reduce using rule 4 (lista_decl)

    lista_decl  go to state 8
    decl        go to state 9
    tip         go to state 10


state 4

    3 header: INCLUDE IOSTREAM . NAMESPACE SEMICOLON INTDECL MAIN LEFT_PAR RIGHT_PAR LEFT_BR

    NAMESPACE  shift, and go to state 11


state 5

    0 $accept: prog $end .

    $default  accept


state 6

    7 tip: INTDECL .

    $default  reduce using rule 7 (tip)


state 7

    8 tip: FLOATDECL .

    $default  reduce using rule 8 (tip)


state 8

    2 prog: header lista_decl . lista_isntr final

    INOP       shift, and go to state 12
    OUTOP      shift, and go to state 13
    IFSTMT     shift, and go to state 14
    WHILESTMT  shift, and go to state 15
    ID         shift, and go to state 16

    SEMICOLON  reduce using rule 13 (instr)
    $default   reduce using rule 11 (lista_isntr)

    lista_isntr  go to state 17
    instr        go to state 18
    attr         go to state 19
    inout        go to state 20
    if_exp       go to state 21
    while_exp    go to state 22


state 9

    5 lista_decl: decl . SEMICOLON lista_decl

    SEMICOLON  shift, and go to state 23


state 10

    6 decl: tip . variabila

    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    variabila  go to state 26


state 11

    3 header: INCLUDE IOSTREAM NAMESPACE . SEMICOLON INTDECL MAIN LEFT_PAR RIGHT_PAR LEFT_BR

    SEMICOLON  shift, and go to state 27


state 12

   29 inout: INOP . variabila

    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    variabila  go to state 28


state 13

   30 inout: OUTOP . exp

    INTEGER   shift, and go to state 29
    FLOAT     shift, and go to state 30
    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    $default  reduce using rule 19 (exp)

    variabila  go to state 31
    exp        go to state 32
    const      go to state 33


state 14

   31 if_exp: IFSTMT . LEFT_PAR condition RIGHT_PAR LEFT_BR lista_isntr RIGHT_BR

    LEFT_PAR  shift, and go to state 34


state 15

   32 while_exp: WHILESTMT . LEFT_PAR condition RIGHT_PAR LEFT_BR lista_isntr RIGHT_BR

    LEFT_PAR  shift, and go to state 35


state 16

   18 attr: ID . EQUALS exp

    EQUALS  shift, and go to state 36


state 17

    2 prog: header lista_decl lista_isntr . final

    RETURN  shift, and go to state 37

    final  go to state 38


state 18

   12 lista_isntr: instr . SEMICOLON lista_isntr

    SEMICOLON  shift, and go to state 39


state 19

   14 instr: attr .

    $default  reduce using rule 14 (instr)


state 20

   15 instr: inout .

    $default  reduce using rule 15 (instr)


state 21

   16 instr: if_exp .

    $default  reduce using rule 16 (instr)


state 22

   17 instr: while_exp .

    $default  reduce using rule 17 (instr)


state 23

    5 lista_decl: decl SEMICOLON . lista_decl

    INTDECL    shift, and go to state 6
    FLOATDECL  shift, and go to state 7

    $default  reduce using rule 4 (lista_decl)

    lista_decl  go to state 40
    decl        go to state 9
    tip         go to state 10


state 24

    9 variabila: ID .

    $default  reduce using rule 9 (variabila)


state 25

   10 variabila: IDVECTOR .

    $default  reduce using rule 10 (variabila)


state 26

    6 decl: tip variabila .

    $default  reduce using rule 6 (decl)


state 27

    3 header: INCLUDE IOSTREAM NAMESPACE SEMICOLON . INTDECL MAIN LEFT_PAR RIGHT_PAR LEFT_BR

    INTDECL  shift, and go to state 41


state 28

   29 inout: INOP variabila .

    $default  reduce using rule 29 (inout)


state 29

   27 const: INTEGER .

    $default  reduce using rule 27 (const)


state 30

   28 const: FLOAT .

    $default  reduce using rule 28 (const)


state 31

   21 exp: variabila .

    $default  reduce using rule 21 (exp)


state 32

   22 exp: exp . PLUS variabila
   23    | exp . MINUS variabila
   24    | exp . DIV variabila
   25    | exp . MOD variabila
   26    | exp . MUL variabila
   30 inout: OUTOP exp .

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43
    DIV    shift, and go to state 44
    MUL    shift, and go to state 45
    MOD    shift, and go to state 46

    $default  reduce using rule 30 (inout)


state 33

   20 exp: const .

    $default  reduce using rule 20 (exp)


state 34

   31 if_exp: IFSTMT LEFT_PAR . condition RIGHT_PAR LEFT_BR lista_isntr RIGHT_BR

    INTEGER   shift, and go to state 29
    FLOAT     shift, and go to state 30
    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    $default  reduce using rule 19 (exp)

    variabila  go to state 31
    exp        go to state 47
    const      go to state 33
    condition  go to state 48


state 35

   32 while_exp: WHILESTMT LEFT_PAR . condition RIGHT_PAR LEFT_BR lista_isntr RIGHT_BR

    INTEGER   shift, and go to state 29
    FLOAT     shift, and go to state 30
    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    $default  reduce using rule 19 (exp)

    variabila  go to state 31
    exp        go to state 47
    const      go to state 33
    condition  go to state 49


state 36

   18 attr: ID EQUALS . exp

    INTEGER   shift, and go to state 29
    FLOAT     shift, and go to state 30
    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    $default  reduce using rule 19 (exp)

    variabila  go to state 31
    exp        go to state 50
    const      go to state 33


state 37

   34 final: RETURN . INTEGER SEMICOLON RIGHT_BR

    INTEGER  shift, and go to state 51


state 38

    2 prog: header lista_decl lista_isntr final .

    $default  reduce using rule 2 (prog)


state 39

   12 lista_isntr: instr SEMICOLON . lista_isntr

    INOP       shift, and go to state 12
    OUTOP      shift, and go to state 13
    IFSTMT     shift, and go to state 14
    WHILESTMT  shift, and go to state 15
    ID         shift, and go to state 16

    SEMICOLON  reduce using rule 13 (instr)
    $default   reduce using rule 11 (lista_isntr)

    lista_isntr  go to state 52
    instr        go to state 18
    attr         go to state 19
    inout        go to state 20
    if_exp       go to state 21
    while_exp    go to state 22


state 40

    5 lista_decl: decl SEMICOLON lista_decl .

    $default  reduce using rule 5 (lista_decl)


state 41

    3 header: INCLUDE IOSTREAM NAMESPACE SEMICOLON INTDECL . MAIN LEFT_PAR RIGHT_PAR LEFT_BR

    MAIN  shift, and go to state 53


state 42

   22 exp: exp PLUS . variabila

    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    variabila  go to state 54


state 43

   23 exp: exp MINUS . variabila

    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    variabila  go to state 55


state 44

   24 exp: exp DIV . variabila

    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    variabila  go to state 56


state 45

   26 exp: exp MUL . variabila

    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    variabila  go to state 57


state 46

   25 exp: exp MOD . variabila

    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    variabila  go to state 58


state 47

   22 exp: exp . PLUS variabila
   23    | exp . MINUS variabila
   24    | exp . DIV variabila
   25    | exp . MOD variabila
   26    | exp . MUL variabila
   33 condition: exp . RELATION exp

    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    DIV       shift, and go to state 44
    MUL       shift, and go to state 45
    MOD       shift, and go to state 46
    RELATION  shift, and go to state 59


state 48

   31 if_exp: IFSTMT LEFT_PAR condition . RIGHT_PAR LEFT_BR lista_isntr RIGHT_BR

    RIGHT_PAR  shift, and go to state 60


state 49

   32 while_exp: WHILESTMT LEFT_PAR condition . RIGHT_PAR LEFT_BR lista_isntr RIGHT_BR

    RIGHT_PAR  shift, and go to state 61


state 50

   18 attr: ID EQUALS exp .
   22 exp: exp . PLUS variabila
   23    | exp . MINUS variabila
   24    | exp . DIV variabila
   25    | exp . MOD variabila
   26    | exp . MUL variabila

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43
    DIV    shift, and go to state 44
    MUL    shift, and go to state 45
    MOD    shift, and go to state 46

    $default  reduce using rule 18 (attr)


state 51

   34 final: RETURN INTEGER . SEMICOLON RIGHT_BR

    SEMICOLON  shift, and go to state 62


state 52

   12 lista_isntr: instr SEMICOLON lista_isntr .

    $default  reduce using rule 12 (lista_isntr)


state 53

    3 header: INCLUDE IOSTREAM NAMESPACE SEMICOLON INTDECL MAIN . LEFT_PAR RIGHT_PAR LEFT_BR

    LEFT_PAR  shift, and go to state 63


state 54

   22 exp: exp PLUS variabila .

    $default  reduce using rule 22 (exp)


state 55

   23 exp: exp MINUS variabila .

    $default  reduce using rule 23 (exp)


state 56

   24 exp: exp DIV variabila .

    $default  reduce using rule 24 (exp)


state 57

   26 exp: exp MUL variabila .

    $default  reduce using rule 26 (exp)


state 58

   25 exp: exp MOD variabila .

    $default  reduce using rule 25 (exp)


state 59

   33 condition: exp RELATION . exp

    INTEGER   shift, and go to state 29
    FLOAT     shift, and go to state 30
    ID        shift, and go to state 24
    IDVECTOR  shift, and go to state 25

    $default  reduce using rule 19 (exp)

    variabila  go to state 31
    exp        go to state 64
    const      go to state 33


state 60

   31 if_exp: IFSTMT LEFT_PAR condition RIGHT_PAR . LEFT_BR lista_isntr RIGHT_BR

    LEFT_BR  shift, and go to state 65


state 61

   32 while_exp: WHILESTMT LEFT_PAR condition RIGHT_PAR . LEFT_BR lista_isntr RIGHT_BR

    LEFT_BR  shift, and go to state 66


state 62

   34 final: RETURN INTEGER SEMICOLON . RIGHT_BR

    RIGHT_BR  shift, and go to state 67


state 63

    3 header: INCLUDE IOSTREAM NAMESPACE SEMICOLON INTDECL MAIN LEFT_PAR . RIGHT_PAR LEFT_BR

    RIGHT_PAR  shift, and go to state 68


state 64

   22 exp: exp . PLUS variabila
   23    | exp . MINUS variabila
   24    | exp . DIV variabila
   25    | exp . MOD variabila
   26    | exp . MUL variabila
   33 condition: exp RELATION exp .

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43
    DIV    shift, and go to state 44
    MUL    shift, and go to state 45
    MOD    shift, and go to state 46

    $default  reduce using rule 33 (condition)


state 65

   31 if_exp: IFSTMT LEFT_PAR condition RIGHT_PAR LEFT_BR . lista_isntr RIGHT_BR

    INOP       shift, and go to state 12
    OUTOP      shift, and go to state 13
    IFSTMT     shift, and go to state 14
    WHILESTMT  shift, and go to state 15
    ID         shift, and go to state 16

    SEMICOLON  reduce using rule 13 (instr)
    $default   reduce using rule 11 (lista_isntr)

    lista_isntr  go to state 69
    instr        go to state 18
    attr         go to state 19
    inout        go to state 20
    if_exp       go to state 21
    while_exp    go to state 22


state 66

   32 while_exp: WHILESTMT LEFT_PAR condition RIGHT_PAR LEFT_BR . lista_isntr RIGHT_BR

    INOP       shift, and go to state 12
    OUTOP      shift, and go to state 13
    IFSTMT     shift, and go to state 14
    WHILESTMT  shift, and go to state 15
    ID         shift, and go to state 16

    SEMICOLON  reduce using rule 13 (instr)
    $default   reduce using rule 11 (lista_isntr)

    lista_isntr  go to state 70
    instr        go to state 18
    attr         go to state 19
    inout        go to state 20
    if_exp       go to state 21
    while_exp    go to state 22


state 67

   34 final: RETURN INTEGER SEMICOLON RIGHT_BR .

    $default  reduce using rule 34 (final)


state 68

    3 header: INCLUDE IOSTREAM NAMESPACE SEMICOLON INTDECL MAIN LEFT_PAR RIGHT_PAR . LEFT_BR

    LEFT_BR  shift, and go to state 71


state 69

   31 if_exp: IFSTMT LEFT_PAR condition RIGHT_PAR LEFT_BR lista_isntr . RIGHT_BR

    RIGHT_BR  shift, and go to state 72


state 70

   32 while_exp: WHILESTMT LEFT_PAR condition RIGHT_PAR LEFT_BR lista_isntr . RIGHT_BR

    RIGHT_BR  shift, and go to state 73


state 71

    3 header: INCLUDE IOSTREAM NAMESPACE SEMICOLON INTDECL MAIN LEFT_PAR RIGHT_PAR LEFT_BR .

    $default  reduce using rule 3 (header)


state 72

   31 if_exp: IFSTMT LEFT_PAR condition RIGHT_PAR LEFT_BR lista_isntr RIGHT_BR .

    $default  reduce using rule 31 (if_exp)


state 73

   32 while_exp: WHILESTMT LEFT_PAR condition RIGHT_PAR LEFT_BR lista_isntr RIGHT_BR .

    $default  reduce using rule 32 (while_exp)
